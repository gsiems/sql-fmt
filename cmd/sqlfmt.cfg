
# dialect: The database dialect to use for formatting.
# Valid values are PostgreSQL, SQLite, Oracle, MariaDB, MSSQL, MSAccess, MySQL,
# and Standard
#
# This corresponds to the -d command line argument
#
# dialect = Standard

# keywordCase: Indicates how specific keywords (such as SELECT, UPDATE, DELETE,
# GRANT, REVOKE, CREATE, etc.) are capitalized.
# Valid values are:
#   upper - Set select keywords to upper case
#   lower - Set all keywords to lower case
#
# This corresponds to the -k command line argument
#
# keywordCase = upper

# indentSize: Specifies how many spaces to use per indent unit. Setting this to
# 0 (zero) causes the formatter to use tabs for indenting.
#
# This corresponds to the -indent command line argument
#
# indentSize = 4

# maxLineLength: indicates how many characters should be in a line of code before
# the formatter starts wrapping lines.
# Valid values are integers >= 72
#
# This corresponds to the -l command line argument
#
# maxLineLength = 120

# preserveQuoting: indicates if identifiers should be unquoted or not. The
# default is to unquote identifiers when possible. Setting preserveQuoting to
#  "on", "true", or "t" causes the formatter to not unquote identifiers.
#
# This corresponds to the -q command line argument
#
# preserveQuoting = false

# wrapMultiTuples: for databases that support having multiple tuples in a
# VALUES statement this controls how the elements in those tuples are wrapped.
# Valid values are:
#   All  - Each element is placed on a separate line
#   Long - Wrap elements when the length of the tuple exceeds the maxLineLength
#   None - All elements are placed on the same line
#
# Note that this only applies to VALUES that contain multiple tuples. For statements
# that only contain one tuple, the elemets in the tuple will wrap if there are 4
# or more elements OR if the length of the elements exceeds the maxLineLength.
#
# This corresponds to the -t command line argument
#
# wrapMultiTuples = None
